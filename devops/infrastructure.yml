# HomeSwipe AWS Infrastructure Configuration
# Este archivo define solo los recursos de infraestructura AWS

service: homeswipe-infrastructure

frameworkVersion: '3'

provider:
  name: aws
  region: us-east-1
  stage: ${opt:stage, 'dev'}

resources:
  Resources:
    # DynamoDB Table
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: homeswipe-users-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

    # S3 Bucket for Frontend
    FrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: homeswipe-frontend-${self:provider.stage}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    # S3 Bucket for Uploads
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: homeswipe-uploads-${self:provider.stage}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              AllowedOrigins:
                - "*"
              MaxAge: 3000

    # CloudFront Origin Access Identity
    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: "OAI for ${self:service}-${self:provider.stage}"

    # CloudFront Distribution for Frontend
    FrontendDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: 
                Fn::GetAtt: [FrontendBucket, RegionalDomainName]
              Id: S3Origin
              S3OriginConfig:
                OriginAccessIdentity: 
                  Fn::Sub: "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          Enabled: true
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html

    # S3 Bucket Policy for Frontend
    FrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: 
          Ref: FrontendBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                AWS: 
                  Fn::Sub: "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
              Action: s3:GetObject
              Resource: 
                Fn::Sub: "arn:aws:s3:::${FrontendBucket}/*"

  Outputs:
    UsersTableName:
      Description: "DynamoDB Users Table Name"
      Value: 
        Ref: UsersTable
      Export:
        Name: 
          Fn::Sub: "${AWS::StackName}-UsersTable"

    UploadsBucketName:
      Description: "S3 Uploads Bucket Name"
      Value: 
        Ref: UploadsBucket
      Export:
        Name: 
          Fn::Sub: "${AWS::StackName}-UploadsBucket"

    FrontendBucketName:
      Description: "S3 Frontend Bucket Name"
      Value: 
        Ref: FrontendBucket
      Export:
        Name: 
          Fn::Sub: "${AWS::StackName}-FrontendBucket"

    CloudFrontDistributionId:
      Description: "CloudFront Distribution ID"
      Value: 
        Ref: FrontendDistribution
      Export:
        Name: 
          Fn::Sub: "${AWS::StackName}-CloudFrontDistribution"

    CloudFrontDomainName:
      Description: "CloudFront Domain Name"
      Value: 
        Fn::GetAtt: [FrontendDistribution, DomainName]
      Export:
        Name: 
          Fn::Sub: "${AWS::StackName}-CloudFrontDomain"